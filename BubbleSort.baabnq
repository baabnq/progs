
use 'libs/stack.baabnq';
use 'libs/chunk.baabnq';



new 5 _pList;
put 4  -> _pList + 0;
put 1  -> _pList + 1;
put 3  -> _pList + 2;
put 7  -> _pList + 3;
put 22 -> _pList + 4;


push _pList;
sub Sort;

push _pList;
sub Chunk::Print;

asm 'brk';



lab Sort;
    sub Stack::Swap; pull _pList;

    push _pList; sub Chunk::Len; pull _n;
        
    lab Sort::Loop;
        put _swapped? = 0;
        
        put _i = 1;
        lab Sort::Loop::Loop;
            put _curr <- _pList + _i - 1;
            put _next <- _pList + _i;

            sub Sort::Swap ~ _curr > _next;
            
            put _i = _i + 1;
        jump Sort::Loop::Loop ~ _i < _n;
        
        "one value must have been sorted, so dec len
        put _n = _n - 1;
                
    jump Sort::Loop ~ _swapped? != 0;

    return;


    lab Sort::Swap;
        put _swapped? = 1;

        put _curr -> _pList + _i;
        put _next -> _pList + _i - 1;
        return;
