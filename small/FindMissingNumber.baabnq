use 'libs/chunk.baabnq';

"the problem:
"   let there be a set of interval natural numbers,
"   starting from zero, such that one integer is missing.
"   (with fancy notation: [0..s]\{m})
"   find that missing number.


"the solution:
"   compute two things.
"   firstly,  the sum over the iota function from 1 to the biggest element in the list.
"   secondly, the sum over the given list.
"   the absolute difference is your answer.

"f.zu ni e.zu tezemi u.tejur i.tenzu rbi mu-
"as you might be able to see, this is not never difficult.
"wie man erkennen mÃ¶ge, ist dies nicht sehr schwer.
"ut forsit intellegis, hoc non est difficile.
"tabun, anataga wakaru, koreha muzukashikunai dayo. (romajide gomennasai)



put _size = 10;

new _size _ptr;
put 3 -> _ptr + 0;
put 1 -> _ptr + 1;
put 2 -> _ptr + 2;
put 8 -> _ptr + 3;
put 7 -> _ptr + 4;
put 5 -> _ptr + 5;
put 4 -> _ptr + 6;
put 9 -> _ptr + 8;
put 0 -> _ptr + 9;

"notice, that the above list is missing a 6

new _size _iota;
"iota(1, size)
push _iota; push 1; push _size; sub Chunk::Range;
"sum(iota(1, size))
push _iota; sub Chunk::Sum; pull _sumIota;

"sum(list)
push _ptr; sub Chunk::Sum; pull _sumList;

put _missing = _sumIota - _sumList;
print _missing;
